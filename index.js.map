{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["\nconst API_KEY = '46087000-8dffe905d5bdd270a8d626623';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function searchElement(element) {\n\n    const url = `${BASE_URL}?key=${API_KEY}&q=${element}&image_type=photo&orientation=horizontal&safesearch=true`\n\n    return fetch(url)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        });\n}","'use strict';\n\nexport function createMarkup(data, gallery) {\n    const markup = data.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n    }) => {\n        return `<li class=\"gallery-list\">\n                    <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                        <img class=\"img\" src=\"${webformatURL}\" \n                        height=\"152\"\n                        width=\"360\" \n                        alt=\"${tags}\" \n                        title=\"${tags}\" />\n                    </a>\n                    <ul class=\"data-list\">\n                        <li class=\"data-item\">\n                            <p class=\"data-name\">Likes</p>\n                            <p class=\"data-result\">${likes}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-name\">Views</p>\n                            <p class=\"data-result\">${views}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-name\">Comments</p>\n                            <p class=\"data-result\">${comments}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-name\">Downloads</p>\n                            <p class=\"data-result\">${downloads}</p>\n                        </li>\n                    </ul> \n        </li>`;\n    }).join();\n    \n    gallery.insertAdjacentHTML(\"beforeend\", markup);\n};","'use strict'  \n\nimport iziToast from 'izitoast';  \nimport 'izitoast/dist/css/iziToast.min.css';  \n\nimport SimpleLightbox from 'simplelightbox';  \nimport 'simplelightbox/dist/simple-lightbox.min.css';  \n\nimport { searchElement } from './js/pixabay-api';  \nimport { createMarkup } from './js/render-function';  \n\nconst galleryEl = document.querySelector('.gallery');  \nconst form = document.querySelector('form');  \nconst loader = document.querySelector('.loading');  \n\nlet galleryBox = new SimpleLightbox('.gallery a', {  \n    caption: true,  \n    captionDelay: 250,  \n    captionsData: 'alt',  \n});  \n\nfunction findElement() {  \n    form.addEventListener('submit', event => {  \n        event.preventDefault();  \n        \n        galleryEl.innerHTML = '';  \n\n        const inputElement = event.target.elements.search.value.toLowerCase().trim();  \n\n        if (!inputElement) {  \n            iziToast.error({ message: 'Please enter a search word.' });  \n            return;  \n        }  \n\n        \n        loader.style.display = 'block';  \n\n        \n        searchElement(inputElement)  \n            .then(element => {  \n                \n                if (element.hits.length === 0) {  \n                    iziToast.info({  \n                        message:  \n                        'Sorry, there are no images matching your search query. Please try again!',  \n                    });  \n                } else {  \n                    createMarkup(element.hits, galleryEl);  \n                    galleryBox.refresh();  \n                }  \n            })  \n            .catch(error => {  \n                iziToast.error({ message: error.message });  \n            })  \n            .finally(() => {  \n                loader.style.display = 'none';  \n                form.reset();  \n            });  \n    });  \n}  \n\nfindElement();  \n                    \n\n\n"],"names":["API_KEY","BASE_URL","searchElement","element","url","response","createMarkup","data","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","galleryEl","form","loader","galleryBox","SimpleLightbox","findElement","event","inputElement","iziToast","error"],"mappings":"6vBACA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAcC,EAAS,CAEnC,MAAMC,EAAM,GAAGH,CAAQ,QAAQD,CAAO,MAAMG,CAAO,2DAEnD,OAAO,MAAMC,CAAG,EACX,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MAC5B,CAAS,CACT,CCbO,SAASC,EAAaC,EAAMC,EAAS,CACxC,MAAMC,EAASF,EAAK,IAAI,CAAC,CACrB,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,oDACqCL,CAAa;AAAA,gDACjBD,CAAY;AAAA;AAAA;AAAA,+BAG7BE,CAAI;AAAA,iCACFA,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,qDAKgBC,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qDAIRC,CAAS;AAAA;AAAA;AAAA,cAIzD,EAAE,KAAI,EAEPR,EAAQ,mBAAmB,YAAaC,CAAM,CAClD,CC/BA,MAAMQ,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAS,SAAS,cAAc,UAAU,EAEhD,IAAIC,EAAa,IAAIC,EAAe,aAAc,CAC9C,QAAS,GACT,aAAc,IACd,aAAc,KAClB,CAAC,EAED,SAASC,GAAc,CACnBJ,EAAK,iBAAiB,SAAUK,GAAS,CACrCA,EAAM,eAAc,EAEpBN,EAAU,UAAY,GAEtB,MAAMO,EAAeD,EAAM,OAAO,SAAS,OAAO,MAAM,cAAc,OAEtE,GAAI,CAACC,EAAc,CACfC,EAAS,MAAM,CAAE,QAAS,6BAA+B,CAAA,EACzD,MACH,CAGDN,EAAO,MAAM,QAAU,QAGvBjB,EAAcsB,CAAY,EACrB,KAAKrB,GAAW,CAETA,EAAQ,KAAK,SAAW,EACxBsB,EAAS,KAAK,CACV,QACA,0EACxB,CAAqB,GAEDnB,EAAaH,EAAQ,KAAMc,CAAS,EACpCG,EAAW,QAAO,EAEtC,CAAa,EACA,MAAMM,GAAS,CACZD,EAAS,MAAM,CAAE,QAASC,EAAM,OAAS,CAAA,CACzD,CAAa,EACA,QAAQ,IAAM,CACXP,EAAO,MAAM,QAAU,OACvBD,EAAK,MAAK,CAC1B,CAAa,CACb,CAAK,CACL,CAEAI,EAAa"}